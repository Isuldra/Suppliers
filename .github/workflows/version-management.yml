name: 🏷️ Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version type to create"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      push_changes:
        description: "Automatically push changes and tags"
        required: true
        default: true
        type: boolean
      tag_prefix:
        description: "Git tag prefix (default: v)"
        required: false
        default: "v"
        type: string

env:
  NODE_VERSION: "22.x"
  TAG_PREFIX: ${{ inputs.tag_prefix || 'v' }}

jobs:
  version:
    name: Create New Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Show current version info
        run: npm run version:info

      - name: Create new version
        run: |
          if [ "${{ inputs.push_changes }}" = "true" ]; then
            npm run version:bump:${{ inputs.version_type }}:push
          else
            npm run version:bump:${{ inputs.version_type }}
          fi
        env:
          TAG_PREFIX: ${{ env.TAG_PREFIX }}

      - name: Show version info after bump
        run: npm run version:info

      - name: Push changes (if not auto-pushed)
        if: inputs.push_changes == 'false'
        run: |
          git push origin main --follow-tags

      - name: Get version from package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Created version: $VERSION"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_PREFIX }}${{ steps.get-version.outputs.version }}
          release_name: Release ${{ env.TAG_PREFIX }}${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: ${{ contains(inputs.version_type, 'pre') }}

      - name: Summary
        run: |
          echo "## 🎉 Version Management Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version Type:** ${{ inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag Prefix:** ${{ env.TAG_PREFIX }}" >> $GITHUB_STEP_SUMMARY
          echo "**Auto Push:** ${{ inputs.push_changes }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The new version has been created and will trigger the build workflow." >> $GITHUB_STEP_SUMMARY
